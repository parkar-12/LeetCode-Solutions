/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
int func(TreeNode *root,int &maxi){
   if(root==NULL){
       return INT_MIN;
   } 
   int l=func(root->left,maxi); 
   int r=func(root->right,maxi); 
   maxi=max(l,maxi); 
   maxi=max(r,maxi);
   if(l!=INT_MIN) 
   maxi=max(l+root->val,maxi);
   if(r!=INT_MIN) 
   maxi=max(r+root->val,maxi);
   if(l!=INT_MIN&&r!=INT_MIN&&maxi<l+r+root->val){
       maxi=l+r+root->val;
   }
   if(max(l,r)>0){
       return max(l,r)+root->val;
   } 
   return root->val; 
}
class Solution {
public:
    int maxPathSum(TreeNode* root) {
        if(root==NULL){
            return 0;
        }
        int maxi=INT_MIN;
        int val=func(root,maxi);
        maxi=max(val,maxi);
        return maxi;
    }
};