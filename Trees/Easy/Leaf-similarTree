/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

void preOrder(TreeNode*root,vector<int>&ans){
    if(root==NULL){
        return;
    }
    if(root->left==NULL&&root->right==NULL){
        ans.push_back(root->val);
    }
    preOrder(root->left,ans);
    preOrder(root->right,ans);
}
class Solution {
public:
    bool leafSimilar(TreeNode* root1, TreeNode* root2) {
        vector<int>arr;
        vector<int>brr;
        preOrder(root1,arr);
        preOrder(root2,brr);
      //  cout<<arr.size()<<" "<<brr.size()<<"\n";
        if(arr.size()!=brr.size()){
            return false;
        }
        int n=arr.size();
        int j;
        for(j=0;j<n;j++){
        //    cout<<arr[j]<<" "<<brr[j]<<"\n";
            if(arr[j]!=brr[j]){
                return false;
            }
        }
        return true;
    }
};