/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
void func(TreeNode* root,vector<string>&arr,string str){
    if(root==NULL){
        return;
    }
    if(root->left==NULL&&root->right==NULL){
        string val=str+to_string(root->val);
        arr.push_back(val);
        return;
    }
    string val=str+to_string(root->val)+"->";
    func(root->left,arr,val);
    func(root->right,arr,val);
    return;
}
class Solution {
public:
    vector<string> binaryTreePaths(TreeNode* root) {
        vector<string>arr;
        if(root==NULL){
            return arr;
        }
        func(root,arr,"");
        return arr;
    }
};