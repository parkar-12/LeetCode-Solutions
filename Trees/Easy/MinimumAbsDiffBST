/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
void inorder(TreeNode*root,vector<int>&arr){
    if(root==NULL){
        return;
    }
    inorder(root->left,arr);
    arr.push_back(root->val);
    inorder(root->right,arr);
    
}
class Solution {
public:
    int getMinimumDifference(TreeNode* root) {
        if(root==NULL){
            return -1;
        }
        vector<int>arr;
        inorder(root,arr);
        int val=INT_MAX;
        int n=arr.size();
        int j;
        for(j=1;j<n;j++){
            if(arr[j]-arr[j-1]<val){
                val=arr[j]-arr[j-1];
            }
        }
        return val;
    }
};