/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
void func(TreeNode* root,int mini,int &ans,int &flag){
    if(root==NULL){
        return;
    }
    if(root->val!=mini){
     //   cout<<root->val<<"\n";
        flag=1;
        ans=min(ans,root->val);
    }
    func(root->left,mini,ans,flag);
    func(root->right,mini,ans,flag);
}
class Solution {
public:
    int findSecondMinimumValue(TreeNode* root) {
        if(root==NULL){
            return -1;
        }
        int ans=INT_MAX;
        int flag=0;
        func(root,root->val,ans,flag);
        if(flag==0){
            return -1;
        }
        return ans;
    }
};