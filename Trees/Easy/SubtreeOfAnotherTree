/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
bool isSameTree(TreeNode* p, TreeNode* q) {
        if(p==NULL&&q==NULL){
            return true;
        }
        if(p==NULL){
            return false;
        }
        if(q==NULL){
            return false;
        }
        if(p->val!=q->val){
            return false;
        }
        return (isSameTree(p->left,q->left)&&isSameTree(p->right,q->right));
    }
class Solution {
public:
    bool isSubtree(TreeNode* s, TreeNode* t) {
        bool temp=isSameTree(s,t);
        if(temp==true){
            return true;
        }
        if(s!=NULL){
            if(isSubtree(s->left,t)==true){
                return true;
            }
            else{
                return isSubtree(s->right,t);
            }
        }
        return false;
    }
};