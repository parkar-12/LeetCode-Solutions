/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
TreeNode *func(vector<int>&arr,int start,int end){
    if(start>end){
        return NULL;
    }
    struct TreeNode *root=new TreeNode();
    root->left=NULL;
    root->right=NULL;
    if(start==end){
        root->val=arr[start];
        root->left=NULL;
        root->right=NULL;
        return root;
    }
    int index=(start+end)/2;
    root->val=arr[index];
    root->left=func(arr,start,index-1);
    root->right=func(arr,index+1,end);
    return root;
}
class Solution {
public:
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        if(nums.size()==0){
            return NULL;
        }
        int n=nums.size();
        return func(nums,0,n-1);
    }
};