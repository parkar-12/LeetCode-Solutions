/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
void inorder(TreeNode *root,vector<int>&arr){
    if(root==NULL){
        return;
    }
    inorder(root->left,arr);
    arr.push_back(root->val);
    inorder(root->right,arr);
}
class Solution {
public:
    TreeNode* increasingBST(TreeNode* root) {
        vector<int>arr;
        if(root==NULL){
            return NULL;
        }
        inorder(root,arr);
        int n=arr.size();
        int j;
        TreeNode *store=new TreeNode(arr[0]);
        root=store;
        for(j=1;j<n;j++){
            TreeNode *temp=new TreeNode(arr[j]);
            store->right=temp;
            store=temp;
        }
        return root;
    }
};