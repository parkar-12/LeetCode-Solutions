/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
bool func(TreeNode *root,unordered_map<int,int>&mp,int k){
    if(root==NULL){
        return false;
    }
    if(mp[k-root->val]>0){
        return true;
    }
    mp[root->val]++;
    bool l=func(root->left,mp,k);
    if(l==true){
        return true;
    }
    return func(root->right,mp,k);
}
class Solution {
public:
    bool findTarget(TreeNode* root, int k) {
        if(root==NULL){
            return false;
        }
        unordered_map<int,int>mp;
        return func(root,mp,k);
    }
};