/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int sumEvenGrandparent(TreeNode* root) {
    if(root==NULL){
        return 0;
    }
    queue<TreeNode *>q;
    q.push(root);
    int sum=0;
    while(!q.empty()){
        TreeNode*temp=q.front();
        q.pop();
        if(temp->left!=NULL){
            if(temp->val%2==0){
                if(temp->left->left!=NULL){
                    sum=sum+temp->left->left->val;
                }
                if(temp->left->right!=NULL){
                    sum=sum+temp->left->right->val;
                }
            }
            q.push(temp->left);
        }
        if(temp->right!=NULL){
            if(temp->val%2==0){
                if(temp->right->left!=NULL){
                    sum=sum+temp->right->left->val;
                }
                if(temp->right->right!=NULL){
                    sum=sum+temp->right->right->val;
                }
            }
            q.push(temp->right);
        }
    }
    return sum;
    }
};