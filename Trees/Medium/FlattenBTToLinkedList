/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
void func(TreeNode *root){
    if(root==NULL){
        return ;
    }
    if(root->left==NULL && root->right ==NULL) return;
    
    func(root->left);
    if(root->left!=NULL){
        TreeNode *t=root;
        TreeNode *temp=t->right;
        t->right=t->left;
        while(t->right!=NULL){
            t=t->right;
        }
        t->right=temp;
        root->left=NULL;
        }
    func(root->right);
}
class Solution {
public:
    void flatten(TreeNode* root) {
        if(root==NULL){
            return;
        }
        func(root);
        return;
    }
};