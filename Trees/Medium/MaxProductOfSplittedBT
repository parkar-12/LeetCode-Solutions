/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
void inorder(TreeNode *root,int &sum){
    if(root==NULL){
        return;
    }
    inorder(root->left,sum);
    sum=sum+root->val;
    inorder(root->right,sum);
}
int func(TreeNode *root,long long int &ans,int total){
    if(root==NULL){
        return 0;
    }
    int left=func(root->left,ans,total);
    int right=func(root->right,ans,total);
    long long int val1=root->val+left+right;
    long long int val2=total-val1;
    long long int temp=((val1)*(val2));
    if(temp>ans){
        ans=temp;
    }
    return root->val+left+right;
}
class Solution {
public:
    int maxProduct(TreeNode* root) {
         if(root==NULL){
             return NULL;
         }
        int sum=0;
        inorder(root,sum);
        long long int ans=0;
        func(root,ans,sum);
        return ans%1000000007;
    }
};