/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
void func(TreeNode* root,string &ans,string str){
    if(root==NULL){
        return;
    }
    if(root->left==NULL&&root->right==NULL){
        char temp=root->val+'a';
        string val=temp+str;
        if(ans==""){
            ans=val;
        }
        else if(ans>val){
            ans=val;
        }
        return;
    }
    char temp=root->val+'a';
    string val=temp+str;
    func(root->left,ans,val);
    func(root->right,ans,val);
    return;
}
class Solution {
public:
    string smallestFromLeaf(TreeNode* root) {
        if(root==NULL){
            return "";
        }
        string ans="";
        func(root,ans,"");
        return ans;
    }
};