/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isEvenOddTree(TreeNode* root) {
        if(root==NULL){
            return true;
        }
        queue<TreeNode*>q;
        q.push(root);
        q.push(NULL);
        int level=0;
        int flag=0;
        int val;
        while(!q.empty()){
            TreeNode *temp=q.front();
            q.pop();
            if(temp==NULL){
                if(!q.empty()){
                    q.push(NULL);
                }
                level++;
                flag=0;
            }
            else{
                if(flag==0){
                    val=temp->val;
                    if((level%2==0)&&(val%2==0)){
                        return false;
                    }
                    if((level%2==1)&&(val%2==1)){
                        return false;
                    }
                    flag=1;
                }
                else{
                    if(level%2==0){
                        if((temp->val%2==0)||(temp->val<=val)){
                            return false;
                        }
                    }
                    else{
                        if((temp->val%2==1)||(temp->val>=val)){
                            return false;
                        }
                    }
                    val=temp->val;
                }
                
                if(temp->left!=NULL){
                    q.push(temp->left);
                }
                if(temp->right!=NULL){
                    q.push(temp->right);
                }
            }
        }
        return true;
    }
};