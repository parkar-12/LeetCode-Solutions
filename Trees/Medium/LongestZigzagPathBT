/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
void func(TreeNode *root,int &max,int lr,int count){
    if(root==NULL){
        return;
    }
    if(count>max){
        max=count;
    }
    if(lr==0){
         func(root->left,max,0,2);
         func(root->right,max,1,count+1);
    }
    else if(lr==2){
        func(root->left,max,0,count+1);
        func(root->right,max,1,count+1);
    }
    else{
        func(root->left,max,0,count+1);
        func(root->right,max,1,2);
    }
}
class Solution {
public:
    int longestZigZag(TreeNode* root) {
        if(root==NULL){
            return 0;
        }
        int max=1;
        func(root,max,2,1);
        return max-1;
    }
};