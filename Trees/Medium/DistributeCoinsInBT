/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
int func(TreeNode *root,int &count){
    if(root==NULL){
        return 0;
    }
    int left=func(root->left,count);
    int right=func(root->right,count);
    int val=abs(left)+abs(right)+root->val-1;
    count=count+val;
    return left+right+root->val-1;
}
class Solution {
public:
    int distributeCoins(TreeNode* root) {
        if(root==NULL){
            return 0;
        }
        int count=0;
        func(root,count);
        return count;
    }
};