/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<vector<int>> levelOrder(Node* root) {
        vector<vector<int>>ans;
        if(root==NULL){
            return ans;
        }
        queue<Node *>q;
        q.push(root);
        q.push(NULL);
        vector<int>arr;
        while(!q.empty()){
            Node *temp=q.front();
            q.pop();
            if(temp==NULL){
                if(!q.empty()){
                    q.push(NULL);
                }
                ans.push_back(arr);
                arr.clear();
            }
            else{
                arr.push_back(temp->val);
                int j;
                int n=temp->children.size();
                for(j=0;j<n;j++){
                    q.push(temp->children[j]);
                }
            }
        }
       return ans; 
    }
};