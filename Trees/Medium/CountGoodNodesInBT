/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
void func(TreeNode *root,int max,int &count){
    if(root==NULL){
        return;
    }
    if(root->val>=max){
       // cout<<root->val<<"\n";
        count++;
    }
    if(max<root->val){
        max=root->val;
    }
    func(root->left,max,count);
    func(root->right,max,count);
}
class Solution {
public:
    int goodNodes(TreeNode* root) {
        if(root==NULL){
            return 0;
        }
        int count=0;
        func(root,INT_MIN,count);
        return count;
    }
};