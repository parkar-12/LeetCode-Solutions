/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
void hasPathSum(TreeNode* root, int sum,vector<int>path,vector<vector<int>>&ans) {
        if(root==NULL){
            return;
        }
        if(root->left==NULL&&root->right==NULL){
            if(root->val==sum){
                path.push_back(root->val);
                ans.push_back(path);
                return;
            }
            else{
                return;
            }
        }
        path.push_back(root->val);
        hasPathSum(root->left,sum-root->val,path,ans);
        hasPathSum(root->right,sum-root->val,path,ans);
        return;
    }
class Solution {
public:
    vector<vector<int>> pathSum(TreeNode* root, int sum) {
        vector<int>path;
        vector<vector<int>>ans;
        if(root==NULL){
            return ans;
        }
        hasPathSum(root,sum,path,ans);
        return ans;
    }
};