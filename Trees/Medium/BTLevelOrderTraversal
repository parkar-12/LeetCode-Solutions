/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* A) {
        vector<vector<int>> ans;
    if(A==NULL){
        return ans;
    }
    queue<TreeNode *>q;
    q.push(A);
    q.push(NULL);
    int count=0;
    vector<int>arr;
    while(!q.empty()){
        TreeNode*temp=q.front();
        q.pop();
        if(temp==NULL){
            if(!q.empty()){
                q.push(NULL);
            }
            if(arr.size()>0){
                ans.push_back(arr);
                arr.clear();
            }
            count++;
        }
        else{
            arr.push_back(temp->val);
            if(temp->left!=NULL){
                q.push(temp->left);
            }
            if(temp->right!=NULL){
                q.push(temp->right);
            }
        }
    }
    return ans;
    }
};