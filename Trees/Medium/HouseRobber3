/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
pair<int,int>func(TreeNode *root){
    if(root==NULL){
        return make_pair(0,0);
    }
    if(root->left==NULL&&root->right==NULL){
        return make_pair(root->val,0);
    }
    pair<int,int>l=func(root->left);
    pair<int,int>r=func(root->right);
    int incl,excl;
    incl=root->val+l.second+r.second;
    excl=max(l.first,l.second)+max(r.first,r.second);
    return make_pair(incl,excl);
}
class Solution {
public:
    int rob(TreeNode* root) {
        if(root==NULL){
            return 0;
        }
        pair<int,int>temp=func(root);
        return max(temp.first,temp.second);
    }
};