class MinStack {
public:
    /** initialize your data structure here. */
    stack<long long int>st;
    long long int min=-1;
    MinStack() {
        int min=-1;
        stack<int>st;
    }
    
    void push(int x) {
        if(st.empty()){
            st.push(x);
            min=x;
            return;
        }
        long long int val=st.top();
        if(x>min){
            st.push(x);
            return;
        }
        else{
            long long int a=x;       
            long long int store=2*a-min;
            st.push(store);
            min=x;
            return;
        }
    }
    
    void pop() {
        if(st.empty()){
            return;
        }
        long long int val=st.top();
        if(val>min){
            st.pop();
            return;
        }
        else{
            long long int a=min;
            min=2*a-val;
            st.pop();
            return;
        }
    }
    
    int top() {
        if(st.empty()){
            return -1;
        }
        long long int val=st.top();
        if(val>min){
            return val;
        }
        else{
            return min;
        }
    }
    
    int getMin() {
        if(!st.empty()){
            return min;
        }
        return -1;
    }
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack* obj = new MinStack();
 * obj->push(x);
 * obj->pop();
 * int param_3 = obj->top();
 * int param_4 = obj->getMin();
 */