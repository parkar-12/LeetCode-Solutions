/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isCousins(TreeNode* root, int x, int y) {
        queue<TreeNode*>q;
        q.push(root);
        q.push(NULL);
        int flag=0;
        int flag1=0;
        while(!q.empty()){
            TreeNode *temp=q.front();
            q.pop();
            if(temp==NULL){
                if(!q.empty()){
                    q.push(NULL);
                }
                if(flag&&flag1){
                    return true;
                }
                flag=0;
                flag1=0;
            }
            else{
                if(temp->val==x){
                    flag=1;
                }
                if(temp->val==y){
                    flag1=1;
                }
                if(temp->left!=NULL&&temp->right!=NULL){
                    if((temp->left->val==x&&temp->right->val==y)||(temp->left->val==y&&temp->right->val==x)){
                        return false;
                    }
                }
                if(temp->left){
                    q.push(temp->left);
                }
                if(temp->right){
                    q.push(temp->right);
                }
            }
        }
        return false;
    }
};